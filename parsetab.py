
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassocGTGELTLEEQNEnonassocASSIGNADDASSIGNSUBASSIGNDIVASSIGNMULASSIGNleftADDSUBleftMULDIVleftDOTADDDOTSUBleftDOTMULDOTDIVrightNEGATIONleftTRANSPOSEADD ADDASSIGN ASSIGN BREAK CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MUL MULASSIGN NE ONES PRINT RETURN STRING SUB SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instructionsinstructions : instructions instructioninstructions : instructioninstruction : statement ';' instruction : IF '(' rel_expression ')' instruction ELSE instruction\n                    | IF '(' rel_expression ')' instruction %prec IFXinstruction : FOR variable ASSIGN expression ':' expression instructioninstruction : WHILE '(' rel_expression ')' instructioninstruction : '{' instructions '}' statement : PRINT expressionstatement : PRINT multiple_expressionsstatement : RETURN expression\n                 | RETURNstatement : CONTINUEstatement : BREAKstatement : assignable ASSIGN expressionstatement : assignable ADDASSIGN expression\n                 | assignable SUBASSIGN expression\n                 | assignable MULASSIGN expression\n                 | assignable DIVASSIGN expressionrel_expression : expression EQ expression\n                 | expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression NE expressionexpression : expression ADD expression\n                  | expression SUB expression\n                  | expression MUL expression\n                  | expression DIV expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expressionexpression : SUB expression %prec NEGATIONexpression : expression TRANSPOSE expression : INTNUMexpression : FLOATNUMexpression : STRINGexpression : assignableassignable : variable\n                  | referencereference : variable '[' expression ']' reference : variable '[' multiple_expressions ']' variable : IDexpression : '(' expression ')' expression : vectorexpression : matrixmatrix : ONES '(' expression ')'\n              | ONES '(' expression ',' expression ')' matrix : ZEROS '(' expression ')'\n              | ZEROS '(' expression ',' expression ')' matrix : EYE '(' expression ')'\n              | EYE '(' expression ',' expression ')' vector : '[' expression ']' vector : '[' multiple_expressions ']' multiple_expressions : expression ',' expressionmultiple_expressions : multiple_expressions ',' expression"
    
_lr_action_items = {'IF':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[5,5,-3,-41,5,-42,-45,-2,-4,5,-37,-38,-39,-40,-47,-48,-9,-36,-35,5,-43,-44,5,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,5,5,-5,-7,-50,-52,-54,]),'FOR':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[6,6,-3,-41,6,-42,-45,-2,-4,6,-37,-38,-39,-40,-47,-48,-9,-36,-35,6,-43,-44,6,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,6,6,-5,-7,-50,-52,-54,]),'WHILE':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[8,8,-3,-41,8,-42,-45,-2,-4,8,-37,-38,-39,-40,-47,-48,-9,-36,-35,8,-43,-44,8,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,8,8,-5,-7,-50,-52,-54,]),'{':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[9,9,-3,-41,9,-42,-45,-2,-4,9,-37,-38,-39,-40,-47,-48,-9,-36,-35,9,-43,-44,9,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,9,9,-5,-7,-50,-52,-54,]),'PRINT':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[10,10,-3,-41,10,-42,-45,-2,-4,10,-37,-38,-39,-40,-47,-48,-9,-36,-35,10,-43,-44,10,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,10,10,-5,-7,-50,-52,-54,]),'RETURN':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[11,11,-3,-41,11,-42,-45,-2,-4,11,-37,-38,-39,-40,-47,-48,-9,-36,-35,11,-43,-44,11,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,11,11,-5,-7,-50,-52,-54,]),'CONTINUE':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[12,12,-3,-41,12,-42,-45,-2,-4,12,-37,-38,-39,-40,-47,-48,-9,-36,-35,12,-43,-44,12,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,12,12,-5,-7,-50,-52,-54,]),'BREAK':([0,2,3,7,9,15,16,17,18,23,27,28,29,30,32,33,50,59,62,74,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,109,110,112,114,116,117,121,122,123,124,125,],[13,13,-3,-41,13,-42,-45,-2,-4,13,-37,-38,-39,-40,-47,-48,-9,-36,-35,13,-43,-44,13,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,-8,-49,-51,-53,13,13,-5,-7,-50,-52,-54,]),'ID':([0,2,3,6,7,9,10,11,15,16,17,18,19,21,22,23,26,27,28,29,30,31,32,33,34,39,40,41,42,43,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,68,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,95,96,97,101,108,109,110,111,112,113,114,115,116,117,121,122,123,124,125,],[16,16,-3,16,-41,16,16,16,-42,-45,-2,-4,16,16,16,16,16,-37,-38,-39,-40,16,-47,-48,16,16,16,16,16,16,16,-9,16,16,16,16,16,16,16,16,-36,16,16,-35,16,16,16,16,16,16,16,16,16,16,-43,-44,16,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-6,16,-8,-49,16,-51,16,-53,16,16,16,-5,-7,-50,-52,-54,]),'$end':([1,2,3,17,18,50,101,109,121,122,],[0,-1,-3,-2,-4,-9,-6,-8,-5,-7,]),'}':([3,17,18,23,50,101,109,121,122,],[-3,-2,-4,50,-9,-6,-8,-5,-7,]),';':([4,7,11,12,13,15,16,24,25,27,28,29,30,32,33,38,59,62,69,70,71,72,73,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,110,112,114,123,124,125,],[18,-41,-13,-14,-15,-42,-45,-10,-11,-37,-38,-39,-40,-47,-48,-12,-36,-35,-16,-17,-18,-19,-20,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-57,-58,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'(':([5,8,10,11,19,21,22,26,31,34,35,36,37,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[19,22,31,31,31,31,31,31,31,31,66,67,68,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ASSIGN':([7,14,15,16,20,82,83,],[-41,39,-42,-45,46,-43,-44,]),'ADDASSIGN':([7,14,15,16,82,83,],[-41,40,-42,-45,-43,-44,]),'SUBASSIGN':([7,14,15,16,82,83,],[-41,41,-42,-45,-43,-44,]),'MULASSIGN':([7,14,15,16,82,83,],[-41,42,-42,-45,-43,-44,]),'DIVASSIGN':([7,14,15,16,82,83,],[-41,43,-42,-45,-43,-44,]),'ADD':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,51,-37,-38,-39,-40,-47,-48,51,51,51,-36,-35,51,51,51,51,51,51,51,51,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,51,51,-46,-55,-56,51,51,51,51,51,51,51,51,51,-49,-51,-53,51,51,51,51,-50,-52,-54,]),'SUB':([7,10,11,15,16,19,21,22,24,26,27,28,29,30,31,32,33,34,38,39,40,41,42,43,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,110,111,112,113,114,115,117,118,119,120,123,124,125,],[-41,26,26,-42,-45,26,26,26,52,26,-37,-38,-39,-40,26,-47,-48,26,52,26,26,26,26,26,52,26,52,26,26,26,26,26,26,26,26,-36,26,26,-35,52,52,26,26,26,52,52,52,52,52,26,26,26,26,26,26,52,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,52,52,-46,-55,-56,52,52,52,52,52,52,52,52,52,26,-49,26,-51,26,-53,26,52,52,52,52,-50,-52,-54,]),'MUL':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,53,-37,-38,-39,-40,-47,-48,53,53,53,-36,-35,53,53,53,53,53,53,53,53,-43,-44,53,53,-29,-30,-31,-32,-33,-34,53,53,-46,-55,-56,53,53,53,53,53,53,53,53,53,-49,-51,-53,53,53,53,53,-50,-52,-54,]),'DIV':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,54,-37,-38,-39,-40,-47,-48,54,54,54,-36,-35,54,54,54,54,54,54,54,54,-43,-44,54,54,-29,-30,-31,-32,-33,-34,54,54,-46,-55,-56,54,54,54,54,54,54,54,54,54,-49,-51,-53,54,54,54,54,-50,-52,-54,]),'DOTADD':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,55,-37,-38,-39,-40,-47,-48,55,55,55,-36,-35,55,55,55,55,55,55,55,55,-43,-44,55,55,55,55,-31,-32,-33,-34,55,55,-46,-55,-56,55,55,55,55,55,55,55,55,55,-49,-51,-53,55,55,55,55,-50,-52,-54,]),'DOTSUB':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,56,-37,-38,-39,-40,-47,-48,56,56,56,-36,-35,56,56,56,56,56,56,56,56,-43,-44,56,56,56,56,-31,-32,-33,-34,56,56,-46,-55,-56,56,56,56,56,56,56,56,56,56,-49,-51,-53,56,56,56,56,-50,-52,-54,]),'DOTMUL':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,57,-37,-38,-39,-40,-47,-48,57,57,57,-36,-35,57,57,57,57,57,57,57,57,-43,-44,57,57,57,57,57,57,-33,-34,57,57,-46,-55,-56,57,57,57,57,57,57,57,57,57,-49,-51,-53,57,57,57,57,-50,-52,-54,]),'DOTDIV':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,58,-37,-38,-39,-40,-47,-48,58,58,58,-36,-35,58,58,58,58,58,58,58,58,-43,-44,58,58,58,58,58,58,-33,-34,58,58,-46,-55,-56,58,58,58,58,58,58,58,58,58,-49,-51,-53,58,58,58,58,-50,-52,-54,]),'TRANSPOSE':([7,15,16,24,27,28,29,30,32,33,38,45,47,59,62,63,64,69,70,71,72,73,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,117,118,119,120,123,124,125,],[-41,-42,-45,59,-37,-38,-39,-40,-47,-48,59,59,59,-36,59,59,59,59,59,59,59,59,59,-43,-44,59,59,59,59,59,59,59,59,59,59,-46,-55,-56,59,59,59,59,59,59,59,59,59,-49,-51,-53,59,59,59,59,-50,-52,-54,]),',':([7,15,16,24,25,27,28,29,30,32,33,47,48,59,62,64,65,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,110,112,114,123,124,125,],[-41,-42,-45,60,61,-37,-38,-39,-40,-47,-48,60,61,-36,-35,60,61,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-57,-58,-46,-55,-56,111,113,115,-49,-51,-53,-50,-52,-54,]),'EQ':([7,15,16,27,28,29,30,32,33,45,59,62,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,75,-36,-35,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'GT':([7,15,16,27,28,29,30,32,33,45,59,62,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,76,-36,-35,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'LT':([7,15,16,27,28,29,30,32,33,45,59,62,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,77,-36,-35,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'GE':([7,15,16,27,28,29,30,32,33,45,59,62,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,78,-36,-35,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'LE':([7,15,16,27,28,29,30,32,33,45,59,62,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,79,-36,-35,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'NE':([7,15,16,27,28,29,30,32,33,45,59,62,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,80,-36,-35,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),']':([7,15,16,27,28,29,30,32,33,47,48,59,62,64,65,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,82,83,-36,-35,96,97,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-57,-58,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),')':([7,15,16,27,28,29,30,32,33,44,49,59,62,63,82,83,85,86,87,88,89,90,91,92,95,96,97,98,99,100,102,103,104,105,106,107,110,112,114,118,119,120,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,74,84,-36,-35,95,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,110,112,114,-21,-22,-23,-24,-25,-26,-49,-51,-53,123,124,125,-50,-52,-54,]),':':([7,15,16,27,28,29,30,32,33,59,62,81,82,83,85,86,87,88,89,90,91,92,95,96,97,110,112,114,123,124,125,],[-41,-42,-45,-37,-38,-39,-40,-47,-48,-36,-35,108,-43,-44,-27,-28,-29,-30,-31,-32,-33,-34,-46,-55,-56,-49,-51,-53,-50,-52,-54,]),'[':([7,10,11,16,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[21,34,34,-45,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'INTNUM':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FLOATNUM':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'STRING':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ONES':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ZEROS':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EYE':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ELSE':([18,50,101,109,121,122,],[-4,-9,116,-8,-5,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,9,],[2,23,]),'instruction':([0,2,9,23,74,84,116,117,],[3,17,3,17,101,109,121,122,]),'statement':([0,2,9,23,74,84,116,117,],[4,4,4,4,4,4,4,4,]),'variable':([0,2,6,9,10,11,19,21,22,23,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,74,75,76,77,78,79,80,84,108,111,113,115,116,117,],[7,7,20,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assignable':([0,2,9,10,11,19,21,22,23,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,74,75,76,77,78,79,80,84,108,111,113,115,116,117,],[14,14,14,30,30,30,30,30,14,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,14,30,30,30,30,30,30,14,30,30,30,30,14,14,]),'reference':([0,2,9,10,11,19,21,22,23,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,74,75,76,77,78,79,80,84,108,111,113,115,116,117,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[24,38,45,47,45,62,63,64,69,70,71,72,73,81,85,86,87,88,89,90,91,92,93,94,98,99,100,102,103,104,105,106,107,117,118,119,120,]),'multiple_expressions':([10,21,34,],[25,48,65,]),'vector':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix':([10,11,19,21,22,26,31,34,39,40,41,42,43,46,51,52,53,54,55,56,57,58,60,61,66,67,68,75,76,77,78,79,80,108,111,113,115,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'rel_expression':([19,22,],[44,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','parser_new.py',37),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_multiple','parser_new.py',42),
  ('instructions -> instruction','instructions',1,'p_instructions_single','parser_new.py',47),
  ('instruction -> statement ;','instruction',2,'p_instruction_statement','parser_new.py',52),
  ('instruction -> IF ( rel_expression ) instruction ELSE instruction','instruction',7,'p_instruction_if','parser_new.py',56),
  ('instruction -> IF ( rel_expression ) instruction','instruction',5,'p_instruction_if','parser_new.py',57),
  ('instruction -> FOR variable ASSIGN expression : expression instruction','instruction',7,'p_instruction_for','parser_new.py',66),
  ('instruction -> WHILE ( rel_expression ) instruction','instruction',5,'p_instruction_while','parser_new.py',71),
  ('instruction -> { instructions }','instruction',3,'p_instruction_curly','parser_new.py',76),
  ('statement -> PRINT expression','statement',2,'p_statement_print_single','parser_new.py',81),
  ('statement -> PRINT multiple_expressions','statement',2,'p_statement_print_multiple','parser_new.py',87),
  ('statement -> RETURN expression','statement',2,'p_statement_return','parser_new.py',92),
  ('statement -> RETURN','statement',1,'p_statement_return','parser_new.py',93),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','parser_new.py',101),
  ('statement -> BREAK','statement',1,'p_statement_break','parser_new.py',106),
  ('statement -> assignable ASSIGN expression','statement',3,'p_statement_assign','parser_new.py',111),
  ('statement -> assignable ADDASSIGN expression','statement',3,'p_statement_assignment_expr','parser_new.py',116),
  ('statement -> assignable SUBASSIGN expression','statement',3,'p_statement_assignment_expr','parser_new.py',117),
  ('statement -> assignable MULASSIGN expression','statement',3,'p_statement_assignment_expr','parser_new.py',118),
  ('statement -> assignable DIVASSIGN expression','statement',3,'p_statement_assignment_expr','parser_new.py',119),
  ('rel_expression -> expression EQ expression','rel_expression',3,'p_rel_expression','parser_new.py',124),
  ('rel_expression -> expression GT expression','rel_expression',3,'p_rel_expression','parser_new.py',125),
  ('rel_expression -> expression LT expression','rel_expression',3,'p_rel_expression','parser_new.py',126),
  ('rel_expression -> expression GE expression','rel_expression',3,'p_rel_expression','parser_new.py',127),
  ('rel_expression -> expression LE expression','rel_expression',3,'p_rel_expression','parser_new.py',128),
  ('rel_expression -> expression NE expression','rel_expression',3,'p_rel_expression','parser_new.py',129),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary','parser_new.py',136),
  ('expression -> expression SUB expression','expression',3,'p_expression_binary','parser_new.py',137),
  ('expression -> expression MUL expression','expression',3,'p_expression_binary','parser_new.py',138),
  ('expression -> expression DIV expression','expression',3,'p_expression_binary','parser_new.py',139),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_binary','parser_new.py',140),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_binary','parser_new.py',141),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_binary','parser_new.py',142),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_binary','parser_new.py',143),
  ('expression -> SUB expression','expression',2,'p_expression_negation','parser_new.py',150),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression_transposition','parser_new.py',155),
  ('expression -> INTNUM','expression',1,'p_expression_int','parser_new.py',160),
  ('expression -> FLOATNUM','expression',1,'p_expression_float','parser_new.py',165),
  ('expression -> STRING','expression',1,'p_expression_string','parser_new.py',170),
  ('expression -> assignable','expression',1,'p_expression_assignable','parser_new.py',175),
  ('assignable -> variable','assignable',1,'p_assiganble','parser_new.py',179),
  ('assignable -> reference','assignable',1,'p_assiganble','parser_new.py',180),
  ('reference -> variable [ expression ]','reference',4,'p_reference_one','parser_new.py',185),
  ('reference -> variable [ multiple_expressions ]','reference',4,'p_reference_more','parser_new.py',191),
  ('variable -> ID','variable',1,'p_variable','parser_new.py',196),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser_new.py',202),
  ('expression -> vector','expression',1,'p_expression_vector','parser_new.py',206),
  ('expression -> matrix','expression',1,'p_expression_matrix','parser_new.py',211),
  ('matrix -> ONES ( expression )','matrix',4,'p_matrix_ones','parser_new.py',215),
  ('matrix -> ONES ( expression , expression )','matrix',6,'p_matrix_ones','parser_new.py',216),
  ('matrix -> ZEROS ( expression )','matrix',4,'p_matrix_zeros','parser_new.py',224),
  ('matrix -> ZEROS ( expression , expression )','matrix',6,'p_matrix_zeros','parser_new.py',225),
  ('matrix -> EYE ( expression )','matrix',4,'p_matrix_eye','parser_new.py',233),
  ('matrix -> EYE ( expression , expression )','matrix',6,'p_matrix_eye','parser_new.py',234),
  ('vector -> [ expression ]','vector',3,'p_vector_one','parser_new.py',242),
  ('vector -> [ multiple_expressions ]','vector',3,'p_vector_more','parser_new.py',247),
  ('multiple_expressions -> expression , expression','multiple_expressions',3,'p_multiple_expressions_two','parser_new.py',252),
  ('multiple_expressions -> multiple_expressions , expression','multiple_expressions',3,'p_multiple_expressions_more','parser_new.py',256),
]
